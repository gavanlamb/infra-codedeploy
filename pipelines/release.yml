name: 1.0$(Rev:.r)
resources:
  repositories:
    - repository: templates
      type: github
      name: expensely/azure-devops-templates
      endpoint: Expensely

pool:
  vmImage: ubuntu-latest

trigger:
  batch: true
  branches:
    include:
      - "main"

pr:
  branches:
    include:
      - '*'

stages:
  - stage: build
    displayName: Build
    jobs:
      - job: configure
        displayName: Configure
        steps:
          - checkout: none
          - task: PowerShell@2
            displayName: Set build identifier
            name: setNPMBuildIdentifier
            inputs:
              targetType: inline
              script: Write-Host "##vso[build.updatebuildnumber]1.0.$(build.buildid)-$(System.StageAttempt)"
              errorActionPreference: default
              showWarnings: true
              pwsh: true
      - job: postman
        displayName: Postman
        dependsOn: configure
        steps:
          - task: NodeTool@0
            displayName: Install Node:14
            inputs:
              versionSpec: 14
          - task: Npm@1
            displayName: Restore
            inputs:
              command: ci
              workingDir: $(Build.SourcesDirectory)/lambdas/postman
          - task: Npm@1
            displayName: Build
            inputs:
              command: custom
              workingDir: $(Build.SourcesDirectory)/lambdas/postman
              customCommand: run build
            env:
              BUILD_NUMBER: $(Build.BuildNumber)
          - task: ArchiveFiles@2
            displayName: Zip
            inputs:
              rootFolderOrFile: $(Build.SourcesDirectory)/lambdas/postman
              includeRootFolder: false
              archiveType: zip
              archiveFile: $(Build.SourcesDirectory)/lambdas/postman/postman.$(Build.BuildNumber).zip
              replaceExistingArchive: true
          - task: PublishBuildArtifacts@1
            displayName: Publish archive
            inputs:
              PathtoPublish: $(Build.SourcesDirectory)/lambdas/postman/postman.$(Build.BuildNumber).zip
              ArtifactName: postman.$(Build.BuildNumber)
              publishLocation: Container

  - stage: production
    displayName: Production
    dependsOn: build
    variables:
      - template: variables/production.ap-southeast-2.yml@templates
    jobs:
      - job: plan
        displayName: Plan
        steps:
          - template: aws/iam/configure.yml@templates
          - template: terraform/plan.yml@templates
            parameters:
              artifactName: ${{ variables.TF_ARTIFACT_NAME }}
              planAdditionalCommandOptions: -var-file="variables/${{ variables.ENVIRONMENT }}.${{ variables.AWS_DEFAULT_REGION }}.tfvars" -var="build_identifier=$(Build.BuildNumber)"
              workspaceName: codedeploy-${{ variables.ENVIRONMENT }}

      - template: azure-devops/approve.yml@templates
        parameters:
          dependsOn: plan
          timeoutInMinutes: 60
          userToNotify: '[Expensely]\Expensely Team'

      - deployment: apply
        displayName: Apply
        dependsOn: approve
        environment: ${{ variables.ENVIRONMENT }}
        variables:
          - template: variables/production.ap-southeast-2.yml
        strategy:
          runOnce:
            deploy:
              steps:
                - download: none
                - template: aws/iam/configure.yml@templates
                - task: DownloadPipelineArtifact@2
                  displayName: Download postman
                  inputs:
                    buildType: current
                    artifactName: postman.$(Build.BuildNumber)
                    targetPath: $(Pipeline.Workspace)
                - task: PowerShell@2
                  displayName: Upload archive
                  inputs:
                    targetType: inline
                    script: |
                      aws s3 cp postman.$(Build.BuildNumber).zip s3://$(CODEDEPLOY_BUCKET_NAME)/functions/postman.$(Build.BuildNumber).zip
                    errorActionPreference: default
                    showWarnings: true
                    pwsh: true
                    workingDirectory: $(Pipeline.Workspace)
                - template: terraform/apply.yml@templates
                  parameters:
                    artifactName: ${{ variables.TF_ARTIFACT_NAME }}
